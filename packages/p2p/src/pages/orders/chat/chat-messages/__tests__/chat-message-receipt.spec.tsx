import React from 'react';
import { screen, render } from '@testing-library/react';
import ChatMessage from 'Utils/chat-message';
import ChatMessageReceipt from '../chat-message-receipt';

const mock_channel = {
    cachedReadReceiptStatus: {
        test: 1,
    },
    url: 'p2porder_CR_28_1686124713',
    channelType: 'group',
    name: 'Chat about order 28',
    coverUrl: 'https://static.sendbird.com/sample/cover/cover_11.jpg',
    creator: null,
    createdAt: 1686124713000,
    data: '',
    customType: '',
    isFrozen: true,
    isEphemeral: false,
    isDistinct: false,
    isSuper: false,
    isBroadcast: false,
    isPublic: false,
    unreadMessageCount: 0,
    inviter: null,
    members: [
        {
            nickname: 'client CR90000181',
            plainProfileUrl: '',
            userId: 'others',
            connectionStatus: 'online',
            lastSeenAt: 0,
            metaData: {},
            isActive: true,
            friendDiscoveryKey: null,
            friendName: null,
            _preferredLanguages: null,
            requireAuth: false,
            state: 'joined',
            role: 'none',
            isMuted: false,
            isBlockedByMe: false,
            isBlockingMe: false,
            restrictionInfo: null,
        },
        {
            nickname: 'u1',
            plainProfileUrl: '',
            userId: 'test',
            connectionStatus: 'offline',
            lastSeenAt: 1686124306310,
            metaData: {},
            isActive: true,
            friendDiscoveryKey: null,
            friendName: null,
            _preferredLanguages: null,
            requireAuth: false,
            state: 'joined',
            role: 'none',
            isMuted: false,
            isBlockedByMe: false,
            isBlockingMe: false,
            restrictionInfo: null,
        },
    ],
    memberMap: {
        p2puser_CR_27_1686018659: {
            nickname: 'client CR90000181',
            plainProfileUrl: '',
            userId: 'p2puser_CR_27_1686018659',
            connectionStatus: 'online',
            lastSeenAt: 0,
            metaData: {},
            isActive: true,
            friendDiscoveryKey: null,
            friendName: null,
            _preferredLanguages: null,
            requireAuth: false,
            state: 'joined',
            role: 'none',
            isMuted: false,
            isBlockedByMe: false,
            isBlockingMe: false,
            restrictionInfo: null,
        },
        p2puser_CR_42_1686123922: {
            nickname: 'u1',
            plainProfileUrl: '',
            userId: 'p2puser_CR_42_1686123922',
            connectionStatus: 'offline',
            lastSeenAt: 1686124306310,
            metaData: {},
            isActive: true,
            friendDiscoveryKey: null,
            friendName: null,
            _preferredLanguages: null,
            requireAuth: false,
            state: 'joined',
            role: 'none',
            isMuted: false,
            isBlockedByMe: false,
            isBlockingMe: false,
            restrictionInfo: null,
        },
    },
    lastMessage: {
        messageId: 1859276692,
        messageType: 'user',
        channelUrl: 'p2porder_CR_28_1686124713',
        data: '1686124841614dadadadad1',
        customType: '',
        silent: false,
        createdAt: 1686124841808,
        updatedAt: 0,
        channelType: 'group',
        metaArrays: [],
        reactions: [],
        mentionType: 'users',
        mentionedUsers: [],
        sendingStatus: 'succeeded',
        parentMessageId: 0,
        parentMessageText: null,
        threadInfo: {
            replyCount: 0,
            mostRepliedUsers: [],
            lastRepliedAt: 0,
            updatedAt: 0,
        },
        isReplyToChannel: false,
        parentMessage: null,
        ogMetaData: null,
        isOperatorMessage: false,
        appleCriticalAlertOptions: null,
        message: 'dadadadada\ndaadadada\ndadadada\ndadadad',
        _sender: {
            nickname: 'client CR90000181',
            plainProfileUrl: '',
            userId: 'p2puser_CR_27_1686018659',
            connectionStatus: 'nonavailable',
            lastSeenAt: 0,
            metaData: {},
            isActive: true,
            friendDiscoveryKey: null,
            friendName: null,
            _preferredLanguages: null,
            requireAuth: false,
            role: 'none',
            isBlockedByMe: false,
        },
        reqId: '1686124828862',
        translations: {},
        requestState: 'succeeded',
        requestedMentionUserIds: [],
        errorCode: 0,
        messageSurvivalSeconds: -1,
        plugins: [],
        poll: null,
    },
    memberCount: 2,
    joinedMemberCount: 2,
    cachedDeliveryReceiptStatus: null,
    myPushTriggerOption: 'default',
    isHidden: false,
    hiddenState: 'unhidden',
    isDiscoverable: false,
    myLastRead: 1686124841808,
    messageSurvivalSeconds: -1,
    invitedAt: 1686124713911,
    joinedAt: 1686124713,
    _messageOffsetTimestamp: 0,
    _cachedLastDeliveredReceipt: {
        sentAt: 0,
        timeout: null,
    },
    isAccessCodeRequired: false,
    isPushEnabled: true,
    myCountPreference: 'all',
    unreadMentionCount: 0,
    myMemberState: 'joined',
    myRole: 'none',
    myMutedState: 'unmuted',
};

describe('<ChatMessageReceipt />', () => {
    it('should render pending receipt icon if status is pending', () => {
        const message = new ChatMessage({
            created_at: 3,
            channel_url: 'test',
            file_type: 'image/jpeg',
            id: 1,
            message: 'test',
            message_type: 'user',
            name: 'test',
            sender_user_id: 'test',
            url: 'test',
            status: ChatMessage.STATUS_PENDING,
        });
        render(<ChatMessageReceipt chat_channel={mock_channel} message={message} sendbird_user_id='TEST' />);
        expect(screen.getByTestId('dt_ic_message_pending')).toBeInTheDocument();
    });

    it('should render errored receipt icon if status is errored', () => {
        const message = new ChatMessage({
            created_at: 3,
            channel_url: 'test',
            file_type: 'image/jpeg',
            id: 1,
            message: 'test',
            message_type: 'user',
            name: 'test',
            sender_user_id: 'test',
            url: 'test',
            status: ChatMessage.STATUS_ERRORED,
        });
        render(<ChatMessageReceipt chat_channel={mock_channel} message={message} sendbird_user_id='TEST' />);
        expect(screen.getByTestId('dt_ic_message_errored')).toBeInTheDocument();
    });

    it('should render delivered receipt icon if status is not pending / errored and the message it not being seen', () => {
        const message = new ChatMessage({
            created_at: 3,
            channel_url: 'test',
            file_type: 'image/jpeg',
            id: 1,
            message: 'test',
            message_type: 'user',
            name: 'test',
            sender_user_id: 'test',
            url: 'test',
            status: 2,
        });
        render(<ChatMessageReceipt chat_channel={mock_channel} message={message} sendbird_user_id='TEST' />);
        expect(screen.getByTestId('dt_ic_message_delivered')).toBeInTheDocument();
    });

    it('should render seen receipt icon if cachedReadReceivedStatus date is greater than message creation date', () => {
        const message = new ChatMessage({
            created_at: 0,
            channel_url: 'test',
            file_type: 'image/jpeg',
            id: 1,
            message: 'test',
            message_type: 'user',
            name: 'test',
            sender_user_id: 'test',
            url: 'test',
            status: 3,
        });
        render(<ChatMessageReceipt chat_channel={mock_channel} message={message} sendbird_user_id='others' />);
        expect(screen.getByTestId('dt_ic_message_seen')).toBeInTheDocument();
    });
});
